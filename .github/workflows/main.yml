name: Trading Bot Live
on:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:
    inputs:
      account_type:
        description: 'Account type (cent/standard)'
        required: true
        default: 'standard'
        type: choice
        options:
          - standard
          - cent

permissions:
  contents: read
  actions: write # Required for downloading/uploading artifacts

jobs:
  trading-bot:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install --no-cache-dir -r requirements.txt
          
      - name: Download MT5
        run: |
          Invoke-WebRequest -Uri "https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe" -OutFile mt5setup.exe
          
      - name: Install MT5
        run: |
          Start-Process -FilePath "mt5setup.exe" -ArgumentList "/auto" -Wait
          
      - uses: actions/download-artifact@v3
        name: Download previous model
        with:
          name: model-files
          path: .
        continue-on-error: true
        
      - name: Run trading bot
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          EXNESS_ACCOUNT: ${{ secrets.EXNESS_ACCOUNT }}
          EXNESS_PASSWORD: ${{ secrets.EXNESS_PASSWORD }}
          EXNESS_SERVER: ${{ secrets.EXNESS_SERVER }}
        run: |
          python scalping_bot.py --mode live --account ${{ github.event.inputs.account_type || 'standard' }}

      - uses: actions/upload-artifact@v3
        name: Upload model files
        if: always()
        with:
          name: model-files
          path: |
            model.pkl
            scaler.pkl


